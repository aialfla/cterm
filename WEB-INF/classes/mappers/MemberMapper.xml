<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.ezen.cterm.mapper.memberMapper">

	<!-- !! Mapper 등록 후 꼭 DAO 주소 입력할 것 !! ex) "mapper namespace.id" -->
	
	<!-- 로그인 =================================================================================== -->
	<select id="login" parameterType="MemberVo" resultType="MemberVo">
		select * from member where id = (#{ id }) and (state = 1 or state = 2)
	</select>
	
	<!-- 목록/내용 조회 =========================================================================== -->
	<!-- 사원 목록 조회 list <String,Object> -->
	<select id="list" parameterType="map" resultType="map">
		 select * from member 
		<!-- where 자리 -->
		 where 
		 <if test="loginduty != 0">
			 state = 1  
		 </if>
		 <if test="loginduty == 0">
			 state between 0 and 1 
		 </if>
		<if test="name != null and name != ''">
		 and name like concat('%',#{name},'%')
		</if>
		<if test="dept != null">
			 and dept 
			<choose>
				<when test="dept == 0"> between 1 and 3 </when>
				<when test="dept == 1"> = 1 </when>
				<when test="dept == 2"> = 2 </when>
				<when test="dept == 3"> = 3 </when>
			</choose>
		</if>
		<if test="duty != null">
			 and duty 
			<choose>
				<when test="duty == 0"> between 1 and 4 </when>
				<when test="duty == 1"> = 1 </when>
				<when test="duty == 2"> = 2 </when>
				<when test="duty == 3"> = 3 </when>
				<when test="duty == 4"> = 4 </when>
			</choose>
		</if>
		 order by dept, duty, name 
		<if test="perPage != -1">
			 limit #{ limitOffset }, #{ perPage }
		</if>
	</select>
	<!-- 사원 목록 조회 olist <String,Object> -->
	<select id="olist" parameterType="MemberSearchVo" resultType="map">
		 select * from member
		<!-- where 자리 -->
		 where (state != 0) 
		<if test="name != null and name != ''">
		 and (name like concat('%',#{name},'%'))
		 </if>
		 <if test="dept == null">
		 and (dept between 0 and 3)
		</if>
		 <if test="dept != null">
		 	 and (dept 
			 <choose>
				<when test="dept == 0"> between 1 and 3) </when>
				<when test="dept == 1"> = 1) </when>
				<when test="dept == 2"> = 2) </when>
				<when test="dept == 3"> = 3) </when>
			 </choose>
		 </if>
		 <if test="duty == null">
		 and (duty between 0 and 4)
		</if>
		 <if test="duty != null">
			 and (duty  
			 <choose>
				<when test="duty == 0"> between 1 and 4) </when>
				<when test="duty == 1"> = 1) </when>
				<when test="duty == 2"> = 2) </when>
				<when test="duty == 3"> = 3) </when>
				<when test="duty == 4"> = 4) </when>
			 </choose>
		 </if>
		order by dept, duty, name 
		<if test="perPage != -1">
			limit #{ limitOffset }, #{ perPage }
		</if>
	</select>
	
	<!-- 총 사원 수 조회 -->
	<select id="count" parameterType="map" resultType="int">
		select count(id) from member 
		<!-- where 자리 -->
		 where 
		 <if test="loginduty != 0">
			 state = 1  
		 </if>
		 <if test="loginduty == 0">
			 state between 0 and 1 
		 </if>
		<if test="name != null and name != ''">
		 and name like concat('%',#{name},'%')
		</if>
		<if test="dept != null">
			 and dept 
			<choose>
				<when test="dept == 0"> between 1 and 3 </when>
				<when test="dept == 1"> = 1 </when>
				<when test="dept == 2"> = 2 </when>
				<when test="dept == 3"> = 3 </when>
			</choose>
		</if>
		<if test="duty != null">
			 and duty 
			<choose>
				<when test="duty == 0"> between 1 and 4 </when>
				<when test="duty == 1"> = 1 </when>
				<when test="duty == 2"> = 2 </when>
				<when test="duty == 3"> = 3 </when>
				<when test="duty == 4"> = 4 </when>
			</choose>
		</if>
	</select>
	
	<!-- 사원 정보 조회 -->
	<select id="view" parameterType="MemberVo" resultType="map">
		select * from member where id  = #{ id }
	</select>
	
	<!-- 내 정보 조회-->
	<select id="viewMine" parameterType="MemberVo" resultType="map">
		select * from member where id = #{ id }
	</select>
	
	<!-- 글쓴이 정보 조회 -->
	<select id="writer" parameterType="int" resultType="MemberVo">
		 select id, name, pw, dept, duty, DATE_FORMAT(joindate, "%Y-%m-%d") AS joindate, retiredate, state, tel, mail, addr, vaca 
		 from member where id = #{ id }
	</select>
	
	
	
	<!-- 등록/수정 ================================================================================ -->
	<!-- 사원 등록(관리자) -->
	<insert id="join" parameterType="MemberVo" useGeneratedKeys="true" keyProperty="id" >
		insert into 
			member (
				pw, 
				name, 
				dept, 
				duty, 
				joindate, 
				state, 
				tel, 
				mail, 
				addr
			) 
			values (
				#{ pw }, 
				#{ name }, 
				#{ dept }, 
				#{ duty }, 
				#{ joindate }, 
				#{ state }, 
				#{ tel }, 
				#{ mail }, 
				#{ addr }
			)
	</insert>
	
	<!-- 내 정보 수정 -->
	<update id="modify_mine" parameterType="MemberVo">
		update member 
		set 
			<if test="npw != null and npw != ''">
				pw = #{ npw }, 
			</if>
			tel = #{ tel }, 
			mail = #{ mail }, 
			addr = #{ addr } 
		where 
			id = #{ id }
	</update>
	
	<!-- 사원 정보 수정(관리자) -->
	<update id="modify_admin" parameterType="MemberVo">
		update member 
		set 
			<if test="npw != null and npw != ''">
				pw = #{ npw }, 
			</if>
			name = #{ name }, 
			dept = #{ dept }, 
			duty = #{ duty }, 
			state = #{ state }, 
			tel = #{ tel }, 
			mail = #{ mail }, 
			addr = #{ addr } 
			<if test="retiredate != null and retiredate != ''">
				, retiredate = #{ retiredate } 
			</if>
		where 
			id = #{ id }
	</update>
</mapper>